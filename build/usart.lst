ARM GAS  /tmp/ccINaNQe.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_USART3_UART_Init
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	MX_USART3_UART_Init:
  25              	.LFB65:
  26              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /**
   2:Core/Src/usart.c ****   ******************************************************************************
   3:Core/Src/usart.c ****   * @file    usart.c
   4:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/usart.c ****   *          of the USART instances.
   6:Core/Src/usart.c ****   ******************************************************************************
   7:Core/Src/usart.c ****   * @attention
   8:Core/Src/usart.c ****   *
   9:Core/Src/usart.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/usart.c ****   * All rights reserved.</center></h2>
  11:Core/Src/usart.c ****   *
  12:Core/Src/usart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/usart.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/usart.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/usart.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** 
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart3;
  28:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart3_rx;
  29:Core/Src/usart.c **** 
  30:Core/Src/usart.c **** /* USART3 init function */
  31:Core/Src/usart.c **** 
  32:Core/Src/usart.c **** void MX_USART3_UART_Init(void)
ARM GAS  /tmp/ccINaNQe.s 			page 2


  33:Core/Src/usart.c **** {
  27              		.loc 1 33 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  34:Core/Src/usart.c **** 
  35:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 0 */
  36:Core/Src/usart.c **** 
  37:Core/Src/usart.c ****   /* USER CODE END USART3_Init 0 */
  38:Core/Src/usart.c **** 
  39:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 1 */
  40:Core/Src/usart.c **** 
  41:Core/Src/usart.c ****   /* USER CODE END USART3_Init 1 */
  42:Core/Src/usart.c ****   huart3.Instance = USART3;
  36              		.loc 1 42 3 view .LVU1
  37              		.loc 1 42 19 is_stmt 0 view .LVU2
  38 0002 0A48     		ldr	r0, .L5
  39 0004 0A4B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  43:Core/Src/usart.c ****   huart3.Init.BaudRate = 115200;
  41              		.loc 1 43 3 is_stmt 1 view .LVU3
  42              		.loc 1 43 24 is_stmt 0 view .LVU4
  43 0008 4FF4E133 		mov	r3, #115200
  44 000c 4360     		str	r3, [r0, #4]
  44:Core/Src/usart.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
  45              		.loc 1 44 3 is_stmt 1 view .LVU5
  46              		.loc 1 44 26 is_stmt 0 view .LVU6
  47 000e 0023     		movs	r3, #0
  48 0010 8360     		str	r3, [r0, #8]
  45:Core/Src/usart.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
  49              		.loc 1 45 3 is_stmt 1 view .LVU7
  50              		.loc 1 45 24 is_stmt 0 view .LVU8
  51 0012 C360     		str	r3, [r0, #12]
  46:Core/Src/usart.c ****   huart3.Init.Parity = UART_PARITY_NONE;
  52              		.loc 1 46 3 is_stmt 1 view .LVU9
  53              		.loc 1 46 22 is_stmt 0 view .LVU10
  54 0014 0361     		str	r3, [r0, #16]
  47:Core/Src/usart.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
  55              		.loc 1 47 3 is_stmt 1 view .LVU11
  56              		.loc 1 47 20 is_stmt 0 view .LVU12
  57 0016 0C22     		movs	r2, #12
  58 0018 4261     		str	r2, [r0, #20]
  48:Core/Src/usart.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  59              		.loc 1 48 3 is_stmt 1 view .LVU13
  60              		.loc 1 48 25 is_stmt 0 view .LVU14
  61 001a 8361     		str	r3, [r0, #24]
  49:Core/Src/usart.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
  62              		.loc 1 49 3 is_stmt 1 view .LVU15
  63              		.loc 1 49 28 is_stmt 0 view .LVU16
  64 001c C361     		str	r3, [r0, #28]
  50:Core/Src/usart.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
  65              		.loc 1 50 3 is_stmt 1 view .LVU17
ARM GAS  /tmp/ccINaNQe.s 			page 3


  66              		.loc 1 50 7 is_stmt 0 view .LVU18
  67 001e FFF7FEFF 		bl	HAL_UART_Init
  68              	.LVL0:
  69              		.loc 1 50 6 view .LVU19
  70 0022 00B9     		cbnz	r0, .L4
  71              	.L1:
  51:Core/Src/usart.c ****   {
  52:Core/Src/usart.c ****     Error_Handler();
  53:Core/Src/usart.c ****   }
  54:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 2 */
  55:Core/Src/usart.c **** 
  56:Core/Src/usart.c ****   /* USER CODE END USART3_Init 2 */
  57:Core/Src/usart.c **** 
  58:Core/Src/usart.c **** }
  72              		.loc 1 58 1 view .LVU20
  73 0024 08BD     		pop	{r3, pc}
  74              	.L4:
  52:Core/Src/usart.c ****   }
  75              		.loc 1 52 5 is_stmt 1 view .LVU21
  76 0026 FFF7FEFF 		bl	Error_Handler
  77              	.LVL1:
  78              		.loc 1 58 1 is_stmt 0 view .LVU22
  79 002a FBE7     		b	.L1
  80              	.L6:
  81              		.align	2
  82              	.L5:
  83 002c 00000000 		.word	.LANCHOR0
  84 0030 00480040 		.word	1073760256
  85              		.cfi_endproc
  86              	.LFE65:
  88              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  89              		.align	1
  90              		.global	HAL_UART_MspInit
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu softvfp
  96              	HAL_UART_MspInit:
  97              	.LVL2:
  98              	.LFB66:
  59:Core/Src/usart.c **** 
  60:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  61:Core/Src/usart.c **** {
  99              		.loc 1 61 1 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 24
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		.loc 1 61 1 is_stmt 0 view .LVU24
 104 0000 70B5     		push	{r4, r5, r6, lr}
 105              	.LCFI1:
 106              		.cfi_def_cfa_offset 16
 107              		.cfi_offset 4, -16
 108              		.cfi_offset 5, -12
 109              		.cfi_offset 6, -8
 110              		.cfi_offset 14, -4
 111 0002 86B0     		sub	sp, sp, #24
 112              	.LCFI2:
ARM GAS  /tmp/ccINaNQe.s 			page 4


 113              		.cfi_def_cfa_offset 40
  62:Core/Src/usart.c **** 
  63:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 114              		.loc 1 63 3 is_stmt 1 view .LVU25
 115              		.loc 1 63 20 is_stmt 0 view .LVU26
 116 0004 0023     		movs	r3, #0
 117 0006 0293     		str	r3, [sp, #8]
 118 0008 0393     		str	r3, [sp, #12]
 119 000a 0493     		str	r3, [sp, #16]
 120 000c 0593     		str	r3, [sp, #20]
  64:Core/Src/usart.c ****   if(uartHandle->Instance==USART3)
 121              		.loc 1 64 3 is_stmt 1 view .LVU27
 122              		.loc 1 64 16 is_stmt 0 view .LVU28
 123 000e 0268     		ldr	r2, [r0]
 124              		.loc 1 64 5 view .LVU29
 125 0010 264B     		ldr	r3, .L13
 126 0012 9A42     		cmp	r2, r3
 127 0014 01D0     		beq	.L11
 128              	.LVL3:
 129              	.L7:
  65:Core/Src/usart.c ****   {
  66:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 0 */
  67:Core/Src/usart.c **** 
  68:Core/Src/usart.c ****   /* USER CODE END USART3_MspInit 0 */
  69:Core/Src/usart.c ****     /* USART3 clock enable */
  70:Core/Src/usart.c ****     __HAL_RCC_USART3_CLK_ENABLE();
  71:Core/Src/usart.c **** 
  72:Core/Src/usart.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
  73:Core/Src/usart.c ****     /**USART3 GPIO Configuration
  74:Core/Src/usart.c ****     PB10     ------> USART3_TX
  75:Core/Src/usart.c ****     PB11     ------> USART3_RX
  76:Core/Src/usart.c ****     */
  77:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_10;
  78:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  79:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  80:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  81:Core/Src/usart.c **** 
  82:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11;
  83:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  84:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  85:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  86:Core/Src/usart.c **** 
  87:Core/Src/usart.c ****     /* USART3 DMA Init */
  88:Core/Src/usart.c ****     /* USART3_RX Init */
  89:Core/Src/usart.c ****     hdma_usart3_rx.Instance = DMA1_Channel3;
  90:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
  91:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
  92:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
  93:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
  94:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
  95:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_NORMAL;
  96:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_LOW;
  97:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
  98:Core/Src/usart.c ****     {
  99:Core/Src/usart.c ****       Error_Handler();
 100:Core/Src/usart.c ****     }
 101:Core/Src/usart.c **** 
ARM GAS  /tmp/ccINaNQe.s 			page 5


 102:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart3_rx);
 103:Core/Src/usart.c **** 
 104:Core/Src/usart.c ****     /* USART3 interrupt Init */
 105:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 106:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 107:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 108:Core/Src/usart.c **** 
 109:Core/Src/usart.c ****   /* USER CODE END USART3_MspInit 1 */
 110:Core/Src/usart.c ****   }
 111:Core/Src/usart.c **** }
 130              		.loc 1 111 1 view .LVU30
 131 0016 06B0     		add	sp, sp, #24
 132              	.LCFI3:
 133              		.cfi_remember_state
 134              		.cfi_def_cfa_offset 16
 135              		@ sp needed
 136 0018 70BD     		pop	{r4, r5, r6, pc}
 137              	.LVL4:
 138              	.L11:
 139              	.LCFI4:
 140              		.cfi_restore_state
 141              		.loc 1 111 1 view .LVU31
 142 001a 0446     		mov	r4, r0
  70:Core/Src/usart.c **** 
 143              		.loc 1 70 5 is_stmt 1 view .LVU32
 144              	.LBB2:
  70:Core/Src/usart.c **** 
 145              		.loc 1 70 5 view .LVU33
  70:Core/Src/usart.c **** 
 146              		.loc 1 70 5 view .LVU34
 147 001c 03F5E433 		add	r3, r3, #116736
 148 0020 DA69     		ldr	r2, [r3, #28]
 149 0022 42F48022 		orr	r2, r2, #262144
 150 0026 DA61     		str	r2, [r3, #28]
  70:Core/Src/usart.c **** 
 151              		.loc 1 70 5 view .LVU35
 152 0028 DA69     		ldr	r2, [r3, #28]
 153 002a 02F48022 		and	r2, r2, #262144
 154 002e 0092     		str	r2, [sp]
  70:Core/Src/usart.c **** 
 155              		.loc 1 70 5 view .LVU36
 156 0030 009A     		ldr	r2, [sp]
 157              	.LBE2:
  70:Core/Src/usart.c **** 
 158              		.loc 1 70 5 view .LVU37
  72:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 159              		.loc 1 72 5 view .LVU38
 160              	.LBB3:
  72:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 161              		.loc 1 72 5 view .LVU39
  72:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 162              		.loc 1 72 5 view .LVU40
 163 0032 9A69     		ldr	r2, [r3, #24]
 164 0034 42F00802 		orr	r2, r2, #8
 165 0038 9A61     		str	r2, [r3, #24]
  72:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 166              		.loc 1 72 5 view .LVU41
ARM GAS  /tmp/ccINaNQe.s 			page 6


 167 003a 9B69     		ldr	r3, [r3, #24]
 168 003c 03F00803 		and	r3, r3, #8
 169 0040 0193     		str	r3, [sp, #4]
  72:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 170              		.loc 1 72 5 view .LVU42
 171 0042 019B     		ldr	r3, [sp, #4]
 172              	.LBE3:
  72:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 173              		.loc 1 72 5 view .LVU43
  77:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 174              		.loc 1 77 5 view .LVU44
  77:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 175              		.loc 1 77 25 is_stmt 0 view .LVU45
 176 0044 4FF48063 		mov	r3, #1024
 177 0048 0293     		str	r3, [sp, #8]
  78:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 178              		.loc 1 78 5 is_stmt 1 view .LVU46
  78:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 179              		.loc 1 78 26 is_stmt 0 view .LVU47
 180 004a 0223     		movs	r3, #2
 181 004c 0393     		str	r3, [sp, #12]
  79:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 182              		.loc 1 79 5 is_stmt 1 view .LVU48
  79:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 183              		.loc 1 79 27 is_stmt 0 view .LVU49
 184 004e 0323     		movs	r3, #3
 185 0050 0593     		str	r3, [sp, #20]
  80:Core/Src/usart.c **** 
 186              		.loc 1 80 5 is_stmt 1 view .LVU50
 187 0052 174E     		ldr	r6, .L13+4
 188 0054 02A9     		add	r1, sp, #8
 189 0056 3046     		mov	r0, r6
 190              	.LVL5:
  80:Core/Src/usart.c **** 
 191              		.loc 1 80 5 is_stmt 0 view .LVU51
 192 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 193              	.LVL6:
  82:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 194              		.loc 1 82 5 is_stmt 1 view .LVU52
  82:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 195              		.loc 1 82 25 is_stmt 0 view .LVU53
 196 005c 4FF40063 		mov	r3, #2048
 197 0060 0293     		str	r3, [sp, #8]
  83:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 198              		.loc 1 83 5 is_stmt 1 view .LVU54
  83:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 199              		.loc 1 83 26 is_stmt 0 view .LVU55
 200 0062 0025     		movs	r5, #0
 201 0064 0395     		str	r5, [sp, #12]
  84:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 202              		.loc 1 84 5 is_stmt 1 view .LVU56
  84:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 203              		.loc 1 84 26 is_stmt 0 view .LVU57
 204 0066 0495     		str	r5, [sp, #16]
  85:Core/Src/usart.c **** 
 205              		.loc 1 85 5 is_stmt 1 view .LVU58
 206 0068 02A9     		add	r1, sp, #8
ARM GAS  /tmp/ccINaNQe.s 			page 7


 207 006a 3046     		mov	r0, r6
 208 006c FFF7FEFF 		bl	HAL_GPIO_Init
 209              	.LVL7:
  89:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 210              		.loc 1 89 5 view .LVU59
  89:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 211              		.loc 1 89 29 is_stmt 0 view .LVU60
 212 0070 1048     		ldr	r0, .L13+8
 213 0072 114B     		ldr	r3, .L13+12
 214 0074 0360     		str	r3, [r0]
  90:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 215              		.loc 1 90 5 is_stmt 1 view .LVU61
  90:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 216              		.loc 1 90 35 is_stmt 0 view .LVU62
 217 0076 4560     		str	r5, [r0, #4]
  91:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 218              		.loc 1 91 5 is_stmt 1 view .LVU63
  91:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 219              		.loc 1 91 35 is_stmt 0 view .LVU64
 220 0078 8560     		str	r5, [r0, #8]
  92:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 221              		.loc 1 92 5 is_stmt 1 view .LVU65
  92:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 222              		.loc 1 92 32 is_stmt 0 view .LVU66
 223 007a 8023     		movs	r3, #128
 224 007c C360     		str	r3, [r0, #12]
  93:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 225              		.loc 1 93 5 is_stmt 1 view .LVU67
  93:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 226              		.loc 1 93 45 is_stmt 0 view .LVU68
 227 007e 0561     		str	r5, [r0, #16]
  94:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_NORMAL;
 228              		.loc 1 94 5 is_stmt 1 view .LVU69
  94:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_NORMAL;
 229              		.loc 1 94 42 is_stmt 0 view .LVU70
 230 0080 4561     		str	r5, [r0, #20]
  95:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_LOW;
 231              		.loc 1 95 5 is_stmt 1 view .LVU71
  95:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_LOW;
 232              		.loc 1 95 30 is_stmt 0 view .LVU72
 233 0082 8561     		str	r5, [r0, #24]
  96:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 234              		.loc 1 96 5 is_stmt 1 view .LVU73
  96:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 235              		.loc 1 96 34 is_stmt 0 view .LVU74
 236 0084 C561     		str	r5, [r0, #28]
  97:Core/Src/usart.c ****     {
 237              		.loc 1 97 5 is_stmt 1 view .LVU75
  97:Core/Src/usart.c ****     {
 238              		.loc 1 97 9 is_stmt 0 view .LVU76
 239 0086 FFF7FEFF 		bl	HAL_DMA_Init
 240              	.LVL8:
  97:Core/Src/usart.c ****     {
 241              		.loc 1 97 8 view .LVU77
 242 008a 58B9     		cbnz	r0, .L12
 243              	.L9:
 102:Core/Src/usart.c **** 
ARM GAS  /tmp/ccINaNQe.s 			page 8


 244              		.loc 1 102 5 is_stmt 1 view .LVU78
 102:Core/Src/usart.c **** 
 245              		.loc 1 102 5 view .LVU79
 246 008c 094B     		ldr	r3, .L13+8
 247 008e 6363     		str	r3, [r4, #52]
 102:Core/Src/usart.c **** 
 248              		.loc 1 102 5 view .LVU80
 249 0090 5C62     		str	r4, [r3, #36]
 102:Core/Src/usart.c **** 
 250              		.loc 1 102 5 view .LVU81
 105:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 251              		.loc 1 105 5 view .LVU82
 252 0092 0022     		movs	r2, #0
 253 0094 1146     		mov	r1, r2
 254 0096 2720     		movs	r0, #39
 255 0098 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 256              	.LVL9:
 106:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 257              		.loc 1 106 5 view .LVU83
 258 009c 2720     		movs	r0, #39
 259 009e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 260              	.LVL10:
 261              		.loc 1 111 1 is_stmt 0 view .LVU84
 262 00a2 B8E7     		b	.L7
 263              	.L12:
  99:Core/Src/usart.c ****     }
 264              		.loc 1 99 7 is_stmt 1 view .LVU85
 265 00a4 FFF7FEFF 		bl	Error_Handler
 266              	.LVL11:
 267 00a8 F0E7     		b	.L9
 268              	.L14:
 269 00aa 00BF     		.align	2
 270              	.L13:
 271 00ac 00480040 		.word	1073760256
 272 00b0 000C0140 		.word	1073810432
 273 00b4 00000000 		.word	.LANCHOR1
 274 00b8 30000240 		.word	1073872944
 275              		.cfi_endproc
 276              	.LFE66:
 278              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 279              		.align	1
 280              		.global	HAL_UART_MspDeInit
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 284              		.fpu softvfp
 286              	HAL_UART_MspDeInit:
 287              	.LVL12:
 288              	.LFB67:
 112:Core/Src/usart.c **** 
 113:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 114:Core/Src/usart.c **** {
 289              		.loc 1 114 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 115:Core/Src/usart.c **** 
ARM GAS  /tmp/ccINaNQe.s 			page 9


 116:Core/Src/usart.c ****   if(uartHandle->Instance==USART3)
 293              		.loc 1 116 3 view .LVU87
 294              		.loc 1 116 16 is_stmt 0 view .LVU88
 295 0000 0268     		ldr	r2, [r0]
 296              		.loc 1 116 5 view .LVU89
 297 0002 0B4B     		ldr	r3, .L22
 298 0004 9A42     		cmp	r2, r3
 299 0006 00D0     		beq	.L21
 300 0008 7047     		bx	lr
 301              	.L21:
 114:Core/Src/usart.c **** 
 302              		.loc 1 114 1 view .LVU90
 303 000a 10B5     		push	{r4, lr}
 304              	.LCFI5:
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 4, -8
 307              		.cfi_offset 14, -4
 308 000c 0446     		mov	r4, r0
 117:Core/Src/usart.c ****   {
 118:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspDeInit 0 */
 119:Core/Src/usart.c **** 
 120:Core/Src/usart.c ****   /* USER CODE END USART3_MspDeInit 0 */
 121:Core/Src/usart.c ****     /* Peripheral clock disable */
 122:Core/Src/usart.c ****     __HAL_RCC_USART3_CLK_DISABLE();
 309              		.loc 1 122 5 is_stmt 1 view .LVU91
 310 000e 094A     		ldr	r2, .L22+4
 311 0010 D369     		ldr	r3, [r2, #28]
 312 0012 23F48023 		bic	r3, r3, #262144
 313 0016 D361     		str	r3, [r2, #28]
 123:Core/Src/usart.c **** 
 124:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 125:Core/Src/usart.c ****     PB10     ------> USART3_TX
 126:Core/Src/usart.c ****     PB11     ------> USART3_RX
 127:Core/Src/usart.c ****     */
 128:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_10|GPIO_PIN_11);
 314              		.loc 1 128 5 view .LVU92
 315 0018 4FF44061 		mov	r1, #3072
 316 001c 0648     		ldr	r0, .L22+8
 317              	.LVL13:
 318              		.loc 1 128 5 is_stmt 0 view .LVU93
 319 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 320              	.LVL14:
 129:Core/Src/usart.c **** 
 130:Core/Src/usart.c ****     /* USART3 DMA DeInit */
 131:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 321              		.loc 1 131 5 is_stmt 1 view .LVU94
 322 0022 606B     		ldr	r0, [r4, #52]
 323 0024 FFF7FEFF 		bl	HAL_DMA_DeInit
 324              	.LVL15:
 132:Core/Src/usart.c **** 
 133:Core/Src/usart.c ****     /* USART3 interrupt Deinit */
 134:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART3_IRQn);
 325              		.loc 1 134 5 view .LVU95
 326 0028 2720     		movs	r0, #39
 327 002a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 328              	.LVL16:
 135:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
ARM GAS  /tmp/ccINaNQe.s 			page 10


 136:Core/Src/usart.c **** 
 137:Core/Src/usart.c ****   /* USER CODE END USART3_MspDeInit 1 */
 138:Core/Src/usart.c ****   }
 139:Core/Src/usart.c **** }
 329              		.loc 1 139 1 is_stmt 0 view .LVU96
 330 002e 10BD     		pop	{r4, pc}
 331              	.LVL17:
 332              	.L23:
 333              		.loc 1 139 1 view .LVU97
 334              		.align	2
 335              	.L22:
 336 0030 00480040 		.word	1073760256
 337 0034 00100240 		.word	1073876992
 338 0038 000C0140 		.word	1073810432
 339              		.cfi_endproc
 340              	.LFE67:
 342              		.global	hdma_usart3_rx
 343              		.global	huart3
 344              		.section	.bss.hdma_usart3_rx,"aw",%nobits
 345              		.align	2
 346              		.set	.LANCHOR1,. + 0
 349              	hdma_usart3_rx:
 350 0000 00000000 		.space	68
 350      00000000 
 350      00000000 
 350      00000000 
 350      00000000 
 351              		.section	.bss.huart3,"aw",%nobits
 352              		.align	2
 353              		.set	.LANCHOR0,. + 0
 356              	huart3:
 357 0000 00000000 		.space	64
 357      00000000 
 357      00000000 
 357      00000000 
 357      00000000 
 358              		.text
 359              	.Letext0:
 360              		.file 2 "/home/copyright/AboutPath/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machin
 361              		.file 3 "/home/copyright/AboutPath/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_s
 362              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 363              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 364              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 365              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 366              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 367              		.file 9 "Core/Inc/usart.h"
 368              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 369              		.file 11 "Core/Inc/main.h"
ARM GAS  /tmp/ccINaNQe.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccINaNQe.s:16     .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccINaNQe.s:24     .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccINaNQe.s:83     .text.MX_USART3_UART_Init:000000000000002c $d
     /tmp/ccINaNQe.s:89     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccINaNQe.s:96     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccINaNQe.s:271    .text.HAL_UART_MspInit:00000000000000ac $d
     /tmp/ccINaNQe.s:279    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccINaNQe.s:286    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccINaNQe.s:336    .text.HAL_UART_MspDeInit:0000000000000030 $d
     /tmp/ccINaNQe.s:349    .bss.hdma_usart3_rx:0000000000000000 hdma_usart3_rx
     /tmp/ccINaNQe.s:356    .bss.huart3:0000000000000000 huart3
     /tmp/ccINaNQe.s:345    .bss.hdma_usart3_rx:0000000000000000 $d
     /tmp/ccINaNQe.s:352    .bss.huart3:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
